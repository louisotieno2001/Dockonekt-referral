<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        /* Style for the display container */
        .display {
            height: 100vh;
            width: 100%;
            margin-top: 85px;
            margin-left: .5em;
            margin-right: .5em;
        }

        /* Style for the cards container */
        .cards {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            width: 100%;
        }

        /* Style for each card */
        .card {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            width: 100%;
            margin: 5px;
            margin-right: 17px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
        }

        #verify {
            background-color: #4CAF50;
            border: none;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 5px;
        }

        #verify:hover {
            background-color: #45a049;
        }

        #reject {
            background-color: #f44336;
            /* Red */
            border: none;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 5px;
        }

        #reject:hover {
            background-color: #d32f2f;
        }

        /* Style for the card body */
        .card-body {
            padding: 20px;
        }

        .card-btn {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            margin: 15px;
        }

        /* Style for the card title */
        .card-title {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        /* Style for the card text */
        .card-text {
            font-size: 14px;
            margin-bottom: 5px;
        }

        .top-menu {
            background-color: #0c1e3e;
            color: #fff;
            padding: 0px 10px;
            display: flex;
            justify-content: space-between;
            position: fixed;
            width: 100%;
            z-index: 1000;
            top: 0;
        }

        /* Submenu */
        .submenu {
            position: absolute;
            top: 80px;
            right: 2px;
            left: 0px;
            background-color: #0c1e3e;
            padding: 10px;
            display: none;
            width: 100%;
            z-index: 1500;
        }


        .submenu a {
            display: block;
            text-decoration: none;
            color: #fff;
        }

        #close-menu {
            display: none;
            padding-right: 1em;
            padding-top: 1.28em;
            cursor: pointer;
        }

        .status {
            padding: .3em;
            background-color: cornflowerblue;
            width: max-content;
            border-radius: 8px;
            height: max-content;
        }

        #open-menu {
            padding-right: 1em;
            padding-top: 1.28em;
            cursor: pointer;
        }

        @media only screen and (max-width: 768px) {
            .submenu {
                position: absolute;
                top: 80px;
                right: 2px;
                left: 0px;
                background-color: #0c1e3e;
                padding: 10px;
                display: none;
                width: 100%;
                z-index: 1500;
            }
        }
    </style>

</head>

<body>
    <div class="top-menu">
        <h1>
            Dockonekt
        </h1>
        <span class="material-symbols-outlined" id="open-menu">menu</span>
        <span class="material-symbols-outlined" id="close-menu">close</span>
        <div class="submenu" id="submenu">
            <h3><a href="/hospital/admin/dashboard">Home</a></h3>
        </div>
    </div>
    <div class="display">
        <div class="cards">
            <% userData.data.forEach(user=> { %>
                <div class="card">

                    <div class="card-body" id="card">
                       
                        <div class="status">
                            <p id="userStatus">
                                <%= user.user_status %>
                            </p>
                        </div>
                        <h5 class="card-text">
                            <%= user.name %>
                        </5>
                        <p class="card-text">
                            <%= user.phone %>
                        </p>
                        <p class="card-text">
                            <%= user.email %>
                        </p>
                    </div>
                    <div class="card-btn">
                        <button id="verify" class="verify-btn" data-user-id="<%= user.id %>">Verify</button>
                        <button id="reject" class="reject-btn" data-user-id="<%= user.id %>">Reject</button>
                    </div>
                </div>
                <% }); %>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            const closeMenu = document.getElementById('close-menu');
            const openMenu = document.getElementById('open-menu');


            const statusElements = document.querySelectorAll(".status");

            statusElements.forEach(statusElement => {
                const userStatus = statusElement.querySelector("p").textContent.trim().toLowerCase();

                if (userStatus === "impostor") {
                    statusElement.style.backgroundColor = "#d32f2f";
                } else if (userStatus === "verified") {
                    statusElement.style.backgroundColor = "#45a049";
                }
            });
            openMenu.addEventListener('click', async (e) => {
                openMenu.style.display = 'none';
                closeMenu.style.display = 'block';
                submenu.style.display = 'block'; // Show submenu
            });

            closeMenu.addEventListener('click', async (e) => {
                closeMenu.style.display = 'none';
                openMenu.style.display = 'block';
                submenu.style.display = 'none'; // Hide submenu
            });

            const verifyButtons = document.querySelectorAll(".verify-btn");

            verifyButtons.forEach(button => {
                button.addEventListener("click", async (e) => {
                    const userId = button.getAttribute("data-user-id");
                    console.log(userId)
                    try {
                        const response = await fetch('/verify-user', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                id: userId,
                            })
                        });

                        if (response.ok) {
                            // Registration successful
                            alert("Updated succesfully. Once you can see this its done. The updates might take up to an hour to reflect. So just Chill. The user can however proceed to login now")
                        } else {
                            // Registration failed
                            console.error('Registration failed:', response.statusText);
                            // Handle the error accordingly
                        }
                    } catch (error) {
                        console.error('Error during registration:', error);
                        // Handle the error accordingly
                    }
                });
            });

            const rejectButtons = document.querySelectorAll(".reject-btn");

            rejectButtons.forEach(button => {
                button.addEventListener("click", async (e) => {
                    const userId = button.getAttribute("data-user-id");
                    console.log(userId)

                    try {
                        const response = await fetch('/reject-user', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                id: userId,
                            })
                        });

                        if (response.ok) {
                            // Registration successful
                          alert("Updated succesfully. Once you can see this its done. The updates might take up to an hour to reflect. So just Chill. The user can't however proceed to login either way.")
                        } else {
                            // Registration failed
                            console.error('Registration failed:', response.statusText);
                            // Handle the error accordingly
                        }
                    } catch (error) {
                        console.error('Error during registration:', error);
                        // Handle the error accordingly
                    }

                });
            });


        });
    </script>
</body>

</html>